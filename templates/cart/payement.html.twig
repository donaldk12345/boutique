{% extends 'base.html.twig' %}

{% block body %}
<style>
body{
    background-color:#f3f4f61c;
}

.card{
    background-color:#fff;
     box-shadow: 0 3px 9px 3px rgb(0 0 0 / 4%)!important;
     border:none !important;
}
.card-header {
  padding: 1.5rem 1.5rem;
  margin-bottom: 0;
  background-color: transparent;
  border-bottom: 0 solid #d9dee3;
}
.card-header:first-child {
  border-radius: 0.5rem 0.5rem 0 0;
}
</style>
    <div class="container mt-4">

    <div class="col-md-4 mt-2 m-auto">
        <h4 class="mb-3 text-center">
            <span class="text-muted text-center" style="font-size:18px!important;">Votre panier ! cliqué sur le boutton pour payé !</span>
            <span class="badge badge-secondary badge-pill">{{total}}</span>
        </h4>
        <ul class="list-group mb-3">
            {% for item in items %}
            <li class="list-group-item d-flex justify-content-between lh-condensed">
                <div>
                    <h6 class="my-0">{{ item.produit.nom }}</h6>
                    <small class="text-muted">Quantité: {{ item.quantite }}</small>
                </div>
                <span class="text-muted">{{ item.produit.prix}}&nbsp;FCFA</span>
            </li>
            {% endfor %}
            <li class="list-group-item d-flex justify-content-between">
                <span>Total (FCFA)</span>
                <strong>  {{ total }} </strong>
            </li>
        </ul>
    </div>
     <div class="col-md-4 m-auto">
        <div class="row">
    <!-- Set up a container element for the button -->
    <div id="paypal-button-container"></div>
    <script>
      paypal.Buttons({
        // Sets up the transaction when a payment button is clicked
        createOrder: (data, actions) => {
          return actions.order.create({
            purchase_units: [{
              amount: {
                value:  {{ total|raw  }} // Can also reference a variable or function
              }
            }]
          });
        },
        // Finalize the transaction after payer approval
        onApprove: (data, actions) => {
          return actions.order.capture().then(function(orderData) {
            // Successful capture! For dev/demo purposes:
            console.log('Capture result', orderData, JSON.stringify(orderData, null, 2));
            const transaction = orderData.purchase_units[0].payments.captures[0];
            alert(`Transaction ${transaction.status}: ${transaction.id}\n\nSee console for all available details`);
            // When ready to go live, remove the alert and show a success message within this page. For example:
            // const element = document.getElementById('paypal-button-container');
            // element.innerHTML = '<h3>Thank you for your payment!</h3>';
            // Or go to another URL:  actions.redirect('thank_you.html');
          });
        }
      }).render('#paypal-button-container');
    </script>
        </div>
    </div>
</div>
     
{% endblock %}

